module utils;

import string local;
import ctype local;
import stdio as io;
import stdlib local;
import types local;
import c2vector as vctr local;

public func char* str_comp(char* source)
{
    if(source == nil)
    {
        return 0;
    }
    bool lastspace = false;
    char* dest = (char*)malloc(sizeof(source));
    doubleindex i;
    i.a = 0;
    i.b = 0;
    for(; i.a < strlen(source); i.a++)
    {
        switch(source[i.a])
        {
            case ' ':
                if(lastspace)
                {
                    continue;
                }
                else
                {
                    lastspace = true;
                    dest[i.b] = source[i.a];
                    i.b++;
                }
                break;
            default:
                dest[i.b] = source[i.a];
                lastspace = false;
                i.b++;
                break;
        }
    }
    return dest;
}

public func bool isws(const char* str)
{
    bool flag = true;
    for(int32 i = 0; i < strlen(str); i++)
    {
        if(str[i] == " "
        || str[i] == "\t"
        || str[i] == "\n"
        || str[i] == "\f"
        || str[i] == "\r"
        || str[i] == "\v"
        ) continue;
        else
        {
            flag = false;
            break;
        }      
    }
    
    return flag;
}

public func char* getopts(vector opts)
{
    char* buffer = "";
    int32 i = opts.total - 1;
    while(i --> -1)
    {
        buffer = strcat(strcat(buffer, " "), vctr.get(&opts, i));
    }
    
    return buffer;
}